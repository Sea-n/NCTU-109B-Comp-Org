        add r0, r0, r0
        addi a0, zero, 4       // f(4), 改變 r4 的值代表 f(r4)，若設太大可能要把 data memory 設大一些
        addi t1, zero, 1
        jal fib                // JAL: 當 fib function 結束後 PC 會跳到 j final
        j final

fib:    addi sp, sp, -12       // stack pointer -12
        sw ra, 0(sp)           // 以下三道 sw 將 reg 存入 memory 中
        sw s0, 4(sp)
        sw s1, 8(sp)
        add s0, a0, zero
        beq s0, zero, re1      // 判斷是否 f(0)
        beq s0, t1, re1        // 判斷是否 f(1)
        addi a0, s0, -1
        jal fib
        add s0, zero, v0
        addi a0, s0, -2
        jal fib
        add v0, v0, s1

exit:   lw ra, 0(sp)
        lw s0, 4(sp)
        lw s1, 8(sp)
        addi sp, sp, 12
        jr ra                  // function call 結束

re1:    addi v0, zero, 1
        j exit

final:  nop



# Register
r0 =    0, r1 =    0, r2 =    5, r3 =    0, r4 =    0, r5 =    0, r6 =    0, r7 =    0
